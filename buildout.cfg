[buildout]
develop = .

# buildout options
show-picked-versions = true
newest = false
download-cache = ${buildout:directory}/downloads
log-level = INFO

# conda
conda-offline = true

parts =
#    keycloak
    phoenix
    phoenix_config
    gunicorn
    supervisor
    nginx
    celery
    mongodb
    pytest

versions = versions

[noversions]

[versions]
birdhousebuilder.recipe.celery = 0.2.0
birdhousebuilder.recipe.conda = 0.4.0
birdhousebuilder.recipe.mongodb = 0.4.0
birdhousebuilder.recipe.nginx = 0.4.2
birdhousebuilder.recipe.supervisor = 0.4.0
collective.recipe.template = 2.1
zc.recipe.deployment = 1.3.0
zc.recipe.egg = 2.0.7

[settings]
prefix =  ${environment:HOME}/birdhouse
user = ${environment:USER}
etc-user = ${:user}
group =
hostname = localhost
http-port = 8081
https-port = 8443
project = Phoenix
version = 0.10.dev
phoenix-debug = false
phoenix-secret = f4e044d933767d6d0e022d1020508db3
phoenix-password = qwerty
phoenix-title = Phoenix
phoenix-description = A Python Web Application to interact with Web Processing Services
phoenix-theme = default
phoenix-docs = https://pyramid-phoenix.readthedocs.org/
log-level = WARNING
mongodb-host = localhost
mongodb-port = 27027
mongodb-dbname = phoenix_db
phoenix-redis = false
redis-host = localhost
redis-port = 6379
redis-url = redis://${:redis-host}:${:redis-port}/0
phoenix-require-csrf = true
# https://pythonhosted.org/pyramid_storage/#configuration
storage-extensions = default+archives+nc
# github oauth
github-client-id =
github-client-secret =
# ceda oauth
ceda-client-id =
ceda-client-secret =
# keycloak
keycloak-url =
keycloak-realm =
keycloak-client-id =
keycloak-client-secret =
# twitcher
twitcher-url = http://localhost:8000
twitcher-client-id =
twitcher-client-secret =
# wps
wps-url = http://localhost:5000

[deployment]
recipe = zc.recipe.deployment
name = phoenix
prefix = ${settings:prefix}
user = ${settings:user}
etc-user = ${settings:etc-user}

[environment]
recipe = collective.recipe.environment

[phoenix]
recipe = zc.recipe.egg
eggs =
    Phoenix
extra-paths =
    ${deployment:etc-prefix}/celery
interpreter = python

[keycloak]
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/register_keycloak.sh
output = ${deployment:etc-directory}/register_keycloak.sh

[phoenix_config]
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/phoenix.ini
output = ${deployment:etc-directory}/phoenix.ini

# generate secret
# python -c "import os; print(''.join('%02x' % ord(x) for x in os.urandom(16)))"
# gunicorn service
socket = ${deployment:var-prefix}/run/phoenix/phoenix.socket
workers = 3
worker_class = gevent
timeout = 30
# upload storage
workdir = ${deployment:lib-directory}/tmp
storage_path = ${deployment:lib-directory}/storage
storage_extensions = ${settings:storage-extensions}
max_file_size = 200

[gunicorn]
recipe = zc.recipe.egg
eggs =
    gunicorn
    ${phoenix:eggs}
extra-paths =
    ${deployment:etc-prefix}/celery
scripts =
    gunicorn=gunicorn

[supervisor]
recipe = birdhousebuilder.recipe.supervisor
name = phoenix
prefix = ${deployment:prefix}
user = ${deployment:user}
etc-user = ${deployment:etc-user}
program = ${:name}
command = ${buildout:bin-directory}/gunicorn --paste ${phoenix_config:output}

[mongodb]
recipe = birdhousebuilder.recipe.mongodb
name = mongodb
pkgs = mongodb
prefix = ${deployment:prefix}
user = ${deployment:user}
etc-user = ${deployment:etc-user}
port = ${settings:mongodb-port}

[nginx]
recipe = birdhousebuilder.recipe.nginx
name = phoenix
prefix = ${deployment:prefix}
user = ${deployment:user}
etc-user = ${deployment:etc-user}
group = ${settings:group}
input = ${buildout:directory}/templates/nginx.conf
socket = ${phoenix_config:socket}
hostname =  ${settings:hostname}
http-port = ${settings:http-port}
https-port = ${settings:https-port}
client_max_body_size = ${phoenix_config:max_file_size}m
storage_path = ${phoenix_config:storage_path}
twitcher_url = ${settings:twitcher-url}
wps_url = ${settings:wps-url}

[celery]
recipe = birdhousebuilder.recipe.celery
name = celery
prefix = ${deployment:prefix}
user = ${deployment:user}
etc-user = ${deployment:etc-user}
app = pyramid_celery.celery_app --ini ${phoenix_config:output}
eggs = ${phoenix:eggs}
#celeryd-concurrency = 1
use-celeryconfig = true
broker-url = mongodb://${settings:mongodb-host}:${settings:mongodb-port}/celery
celery-result-backend = mongodb://${settings:mongodb-host}:${settings:mongodb-port}
celery-mongodb-backend-settings = {'database': 'celery', 'taskmeta_collection': 'celery_taskmeta',}
loglevel = ${settings:log-level}

[pytest]
recipe = zc.recipe.egg
eggs =
    pytest
    ${phoenix:eggs}
